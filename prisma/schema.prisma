// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  image     String?
  posts     Post[]
  // profile   Profile?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      Role     @default(USER)
}

model Post {
  id Int @id @default(autoincrement())

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  price Int

  description String

  preview String @db.VarChar(255)
  images  String @db.VarChar(255)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  published Boolean @default(false)

  user   User @relation(fields: [userId], references: [id])
  userId Int

  latitude  String  @db.VarChar(255)
  longitude String  @db.VarChar(255)
  rooms     Int
  furnished Boolean
  meters    Int

  @@index(userId)
}

model Article {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  slug      String   @unique @db.VarChar(255)
  title     String   @db.VarChar(255)
  body      String
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String @unique @db.VarChar(255)
  label String @unique @db.VarChar(255)
  image String
  posts Post[]
}

enum Role {
  USER
  ADMIN
}
